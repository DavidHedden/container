name: CI

# thanks go to derhansen for demo extension https://github.com/derhansen/gha_demo
# and blog https://www.derhansen.de/2020/05/typo3-extension-testing-with-github-actions.html


on: []

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # TYPO3 Testing Framework fails with phpunit 9 ("class \Text_Template" gots "final")
      - uses: actions/checkout@master
      - uses: nanasess/setup-php@master
        with:
          php-version: '7.2'

      # composer
      - name: Update Composer
        run: |
          sudo composer self-update
          composer --version
      # Directory permissions for .composer are wrong, so we remove the complete directory
      # https://github.com/actions/virtual-environments/issues/824
      - name: Delete .composer directory
        run: sudo rm -rf ~/.composer
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: dependencies-composer-${{ hashFiles('composer.json') }}

      - name: Install composer dependencies
        run: composer install --no-progress

      # code analysis
      - name: Phpstan
        run: .Build/bin/phpstan analyse -c Resources/Private/Configuration/phpstan.neon
      - name: Phpcsfix
        run: .Build/bin/php-cs-fixer fix --config=.Build/vendor/typo3/coding-standards/templates/extension_php_cs.dist --dry-run --stop-on-violation --using-cache=no .

        # unit tests
      - name: Unit Tests
        run: .Build/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit/

        # start db
      - name: Start MySQL
        run: sudo /etc/init.d/mysql start

      - name: Initialize TYPO3 environment
        run: cp Build/envs/.env.github .env

      # functional tests
      - name: Functional Tests
        run: .Build/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml Tests/Functional

      # acceptance
      - name: Setup Runner Database
        run: |
          mysql -uroot -h127.0.0.1 -proot -e 'CREATE DATABASE IF NOT EXISTS containertest_at;'
      - name: Initialize TYPO3 environment
        run: |
          mkdir config && cd config && ln -s ../Build/sites && cd -
          cp Build/LocalConfiguration.php .Build/Web/typo3conf/
          .Build/bin/typo3cms install:generatepackagestates
          .Build/bin/typo3cms database:update
      - name: Run PHP webserver
        run: |
          export APP_IP=`ip addr show eth0 | grep -Po 'inet \K[\d.]+'`
          sed -i -e "s/GITHUB_DOMAIN/$APP_IP:8888/" Tests/Acceptance/_envs/github.yml
          php -S 0.0.0.0:8888 -t .Build/Web/ &> php.log.txt &
          sleep 2;
      - name: Test PHP webserver and initialize TYPO3 cache
        run: |
          export APP_IP=`ip addr show eth0 | grep -Po 'inet \K[\d.]+'`
          curl "$APP_IP:8888"

      - name: Run chromedriver
        run: nohup $CHROMEWEBDRIVER/chromedriver --url-base=/wd/hub /dev/null 2>&1 &
      - name: Codeception Acceptance Tests
        run: |
          .Build/bin/codecept run Backend --env=github -c Tests/codeception.yml

      - name: Upload Codeception output
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: codeception-results
          path: .Build/Web/typo3temp/var/tests/AcceptanceReports
      - name: Upload PHP log
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: php-log
          path: php.log.txt
